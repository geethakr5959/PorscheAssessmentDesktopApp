// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensor_data.proto

// Protobuf Java Version: 3.25.1
package com.geethakr.porsche.protobuf;

public final class SensorDataProto {
  private SensorDataProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SensorDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SensorData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float pressure = 1;</code>
     * @return The pressure.
     */
    float getPressure();

    /**
     * <code>bool lights_on = 2;</code>
     * @return The lightsOn.
     */
    boolean getLightsOn();

    /**
     * <code>float tpms = 3;</code>
     * @return The tpms.
     */
    float getTpms();

    /**
     * <code>float temperature = 4;</code>
     * @return The temperature.
     */
    float getTemperature();

    /**
     * <code>int32 fuel_level = 5;</code>
     * @return The fuelLevel.
     */
    int getFuelLevel();
  }
  /**
   * Protobuf type {@code SensorData}
   */
  public static final class SensorData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SensorData)
      SensorDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SensorData.newBuilder() to construct.
    private SensorData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorData() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SensorData();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geethakr.porsche.protobuf.SensorDataProto.internal_static_SensorData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geethakr.porsche.protobuf.SensorDataProto.internal_static_SensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geethakr.porsche.protobuf.SensorDataProto.SensorData.class, com.geethakr.porsche.protobuf.SensorDataProto.SensorData.Builder.class);
    }

    public static final int PRESSURE_FIELD_NUMBER = 1;
    private float pressure_ = 0F;
    /**
     * <code>float pressure = 1;</code>
     * @return The pressure.
     */
    @java.lang.Override
    public float getPressure() {
      return pressure_;
    }

    public static final int LIGHTS_ON_FIELD_NUMBER = 2;
    private boolean lightsOn_ = false;
    /**
     * <code>bool lights_on = 2;</code>
     * @return The lightsOn.
     */
    @java.lang.Override
    public boolean getLightsOn() {
      return lightsOn_;
    }

    public static final int TPMS_FIELD_NUMBER = 3;
    private float tpms_ = 0F;
    /**
     * <code>float tpms = 3;</code>
     * @return The tpms.
     */
    @java.lang.Override
    public float getTpms() {
      return tpms_;
    }

    public static final int TEMPERATURE_FIELD_NUMBER = 4;
    private float temperature_ = 0F;
    /**
     * <code>float temperature = 4;</code>
     * @return The temperature.
     */
    @java.lang.Override
    public float getTemperature() {
      return temperature_;
    }

    public static final int FUEL_LEVEL_FIELD_NUMBER = 5;
    private int fuelLevel_ = 0;
    /**
     * <code>int32 fuel_level = 5;</code>
     * @return The fuelLevel.
     */
    @java.lang.Override
    public int getFuelLevel() {
      return fuelLevel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(pressure_) != 0) {
        output.writeFloat(1, pressure_);
      }
      if (lightsOn_ != false) {
        output.writeBool(2, lightsOn_);
      }
      if (java.lang.Float.floatToRawIntBits(tpms_) != 0) {
        output.writeFloat(3, tpms_);
      }
      if (java.lang.Float.floatToRawIntBits(temperature_) != 0) {
        output.writeFloat(4, temperature_);
      }
      if (fuelLevel_ != 0) {
        output.writeInt32(5, fuelLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(pressure_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, pressure_);
      }
      if (lightsOn_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, lightsOn_);
      }
      if (java.lang.Float.floatToRawIntBits(tpms_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, tpms_);
      }
      if (java.lang.Float.floatToRawIntBits(temperature_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, temperature_);
      }
      if (fuelLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, fuelLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geethakr.porsche.protobuf.SensorDataProto.SensorData)) {
        return super.equals(obj);
      }
      com.geethakr.porsche.protobuf.SensorDataProto.SensorData other = (com.geethakr.porsche.protobuf.SensorDataProto.SensorData) obj;

      if (java.lang.Float.floatToIntBits(getPressure())
          != java.lang.Float.floatToIntBits(
              other.getPressure())) return false;
      if (getLightsOn()
          != other.getLightsOn()) return false;
      if (java.lang.Float.floatToIntBits(getTpms())
          != java.lang.Float.floatToIntBits(
              other.getTpms())) return false;
      if (java.lang.Float.floatToIntBits(getTemperature())
          != java.lang.Float.floatToIntBits(
              other.getTemperature())) return false;
      if (getFuelLevel()
          != other.getFuelLevel()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PRESSURE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPressure());
      hash = (37 * hash) + LIGHTS_ON_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLightsOn());
      hash = (37 * hash) + TPMS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTpms());
      hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTemperature());
      hash = (37 * hash) + FUEL_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getFuelLevel();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geethakr.porsche.protobuf.SensorDataProto.SensorData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SensorData)
        com.geethakr.porsche.protobuf.SensorDataProto.SensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geethakr.porsche.protobuf.SensorDataProto.internal_static_SensorData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geethakr.porsche.protobuf.SensorDataProto.internal_static_SensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geethakr.porsche.protobuf.SensorDataProto.SensorData.class, com.geethakr.porsche.protobuf.SensorDataProto.SensorData.Builder.class);
      }

      // Construct using com.geethakr.porsche.protobuf.SensorDataProto.SensorData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        pressure_ = 0F;
        lightsOn_ = false;
        tpms_ = 0F;
        temperature_ = 0F;
        fuelLevel_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geethakr.porsche.protobuf.SensorDataProto.internal_static_SensorData_descriptor;
      }

      @java.lang.Override
      public com.geethakr.porsche.protobuf.SensorDataProto.SensorData getDefaultInstanceForType() {
        return com.geethakr.porsche.protobuf.SensorDataProto.SensorData.getDefaultInstance();
      }

      @java.lang.Override
      public com.geethakr.porsche.protobuf.SensorDataProto.SensorData build() {
        com.geethakr.porsche.protobuf.SensorDataProto.SensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geethakr.porsche.protobuf.SensorDataProto.SensorData buildPartial() {
        com.geethakr.porsche.protobuf.SensorDataProto.SensorData result = new com.geethakr.porsche.protobuf.SensorDataProto.SensorData(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geethakr.porsche.protobuf.SensorDataProto.SensorData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.pressure_ = pressure_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.lightsOn_ = lightsOn_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.tpms_ = tpms_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.temperature_ = temperature_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.fuelLevel_ = fuelLevel_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geethakr.porsche.protobuf.SensorDataProto.SensorData) {
          return mergeFrom((com.geethakr.porsche.protobuf.SensorDataProto.SensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geethakr.porsche.protobuf.SensorDataProto.SensorData other) {
        if (other == com.geethakr.porsche.protobuf.SensorDataProto.SensorData.getDefaultInstance()) return this;
        if (other.getPressure() != 0F) {
          setPressure(other.getPressure());
        }
        if (other.getLightsOn() != false) {
          setLightsOn(other.getLightsOn());
        }
        if (other.getTpms() != 0F) {
          setTpms(other.getTpms());
        }
        if (other.getTemperature() != 0F) {
          setTemperature(other.getTemperature());
        }
        if (other.getFuelLevel() != 0) {
          setFuelLevel(other.getFuelLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                pressure_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 16: {
                lightsOn_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 29: {
                tpms_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 37: {
                temperature_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 40: {
                fuelLevel_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float pressure_ ;
      /**
       * <code>float pressure = 1;</code>
       * @return The pressure.
       */
      @java.lang.Override
      public float getPressure() {
        return pressure_;
      }
      /**
       * <code>float pressure = 1;</code>
       * @param value The pressure to set.
       * @return This builder for chaining.
       */
      public Builder setPressure(float value) {

        pressure_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>float pressure = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPressure() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pressure_ = 0F;
        onChanged();
        return this;
      }

      private boolean lightsOn_ ;
      /**
       * <code>bool lights_on = 2;</code>
       * @return The lightsOn.
       */
      @java.lang.Override
      public boolean getLightsOn() {
        return lightsOn_;
      }
      /**
       * <code>bool lights_on = 2;</code>
       * @param value The lightsOn to set.
       * @return This builder for chaining.
       */
      public Builder setLightsOn(boolean value) {

        lightsOn_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bool lights_on = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLightsOn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lightsOn_ = false;
        onChanged();
        return this;
      }

      private float tpms_ ;
      /**
       * <code>float tpms = 3;</code>
       * @return The tpms.
       */
      @java.lang.Override
      public float getTpms() {
        return tpms_;
      }
      /**
       * <code>float tpms = 3;</code>
       * @param value The tpms to set.
       * @return This builder for chaining.
       */
      public Builder setTpms(float value) {

        tpms_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>float tpms = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTpms() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tpms_ = 0F;
        onChanged();
        return this;
      }

      private float temperature_ ;
      /**
       * <code>float temperature = 4;</code>
       * @return The temperature.
       */
      @java.lang.Override
      public float getTemperature() {
        return temperature_;
      }
      /**
       * <code>float temperature = 4;</code>
       * @param value The temperature to set.
       * @return This builder for chaining.
       */
      public Builder setTemperature(float value) {

        temperature_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>float temperature = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperature() {
        bitField0_ = (bitField0_ & ~0x00000008);
        temperature_ = 0F;
        onChanged();
        return this;
      }

      private int fuelLevel_ ;
      /**
       * <code>int32 fuel_level = 5;</code>
       * @return The fuelLevel.
       */
      @java.lang.Override
      public int getFuelLevel() {
        return fuelLevel_;
      }
      /**
       * <code>int32 fuel_level = 5;</code>
       * @param value The fuelLevel to set.
       * @return This builder for chaining.
       */
      public Builder setFuelLevel(int value) {

        fuelLevel_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 fuel_level = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFuelLevel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fuelLevel_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SensorData)
    }

    // @@protoc_insertion_point(class_scope:SensorData)
    private static final com.geethakr.porsche.protobuf.SensorDataProto.SensorData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geethakr.porsche.protobuf.SensorDataProto.SensorData();
    }

    public static com.geethakr.porsche.protobuf.SensorDataProto.SensorData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SensorData>
        PARSER = new com.google.protobuf.AbstractParser<SensorData>() {
      @java.lang.Override
      public SensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SensorData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geethakr.porsche.protobuf.SensorDataProto.SensorData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SensorData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SensorData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021sensor_data.proto\"h\n\nSensorData\022\020\n\010pre" +
      "ssure\030\001 \001(\002\022\021\n\tlights_on\030\002 \001(\010\022\014\n\004tpms\030\003" +
      " \001(\002\022\023\n\013temperature\030\004 \001(\002\022\022\n\nfuel_level\030" +
      "\005 \001(\005B0\n\035com.geethakr.porsche.protobufB\017" +
      "SensorDataProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_SensorData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SensorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SensorData_descriptor,
        new java.lang.String[] { "Pressure", "LightsOn", "Tpms", "Temperature", "FuelLevel", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
